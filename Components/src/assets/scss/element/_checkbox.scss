.checkbox-control {
  @extend %switch-control;

  &.checked.disabled {
    .checkbox-control__button {
      border-color: transparent;
      pointer-events: none !important;
    }

    .checkbox-control__input:checked + .checkbox-control__button {
      background-color: $black-12;
    }
  }
}

.checkbox-control__label {
  @extend %switch-control__label;
}

.checkbox-control__cell {
  @extend %switch-control__cell;
}

.checkbox-control__input {
  @extend %switch-control__input;

  &:checked {
    & + .checkbox-control__button {
      border-color: $brand-primary-color;
      background-color: $brand-primary-color;
    }

    & ~ .checkbox-control__check-icon polyline {
      opacity: 1;
      animation: check 200ms cubic-bezier(0.65, 0, 0.45, 1) 48ms forwards;
    }
  }
}

.checkbox-control__button {
  @extend %switch-control__button;
  border-radius: 0.125rem;
  overflow: hidden;
}

.checkbox-control__check-icon {
  width: 1.125rem;
  height: 1.125rem;
  position: absolute;
  pointer-events: none;
  display: flex;
  align-items: center;
  overflow: hidden;
  justify-content: center;

  & > svg {
    width: 12px;
    height: 8px;

    & > polyline {
      fill: none;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke: $white;
      stroke-width: 2;
      stroke-dasharray: 48;
      stroke-dashoffset: 48;
      animation: uncheck 200ms ease-out forwards;
    }
  }
}

.checkbox-control__rippler {
  @extend %switch-control__rippler;
}

.checkbox-control__ripple {
  @extend %switch-control__ripple;
}

@keyframes check {
  from {
    stroke-dashoffset: 48;
  }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes uncheck {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 48;
  }
}
